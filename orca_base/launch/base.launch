<launch>

  <!-- Arguments; defaults are for a live launch -->
  <arg name="simulation" default="false" />
  <arg name="launch_complementary_filter" default="true" />
  <arg name="launch_madgwick_filter" default="false" />

  <!-- Load robot description and launch robot and state publishers -->
  <include file="$(find orca_description)/launch/description.launch" />

  <!-- Launch orca_base -->
  <node name="orca_base" pkg="orca_base" type="orca_base" output="log">
    <param name="simulation" value="$(arg simulation)" />
    <param name="depth_pid_dead_band" value="0.002" />
    <param name="yaw_pid_dead_band" value="0.0005" />
  </node>

  <!-- Launch complementary filter -->
  <node pkg="imu_complementary_filter" type="complementary_filter_node" name="imu_filter" if="$(arg launch_complementary_filter)">
    <param name="use_mag" value="true" /> <!-- Use magnetic field data -->
    <param name="publish_tf" value="false" /> <!-- Do not publish a transform, orca_base will do that -->
  </node>

  <!-- Or launch madgwick filter (but not both filters) -->
  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter" if="$(arg launch_madgwick_filter)">
    <param name="use_mag" value="true" /> <!-- Use magnetic field data -->
    <param name="use_magnetic_field_msg" value="true" /> <!-- Use the new msg type -->
    <param name="publish_tf" value="false" /> <!-- Do not publish a transform, orca_base will do that -->
    <param name="world_frame" value="nwu" /> <!-- Complementary filter uses NWU, so force Madgwick to as well -->
  </node>

  <!-- Launch the yaw pid controller -->
  <node name="yaw_pid" pkg="pid" type="controller" output="log">
    <param name="node_name" value="yaw_pid_node" />
    <param name="angle_error" value="true" /> <!-- Treat control variable as an angle in radians -->
    <param name="Kp" value="0.007" />
    <param name="Ki" value="0.0" />
    <param name="Kd" value="0.0" />
    <param name="upper_limit" value="0.1" />
    <param name="lower_limit" value="-0.1" />
    <param name="windup_limit" value="0.1" />
    <remap from="pid_enable" to="/yaw_pid/pid_enable" />
    <remap from="state" to="/yaw_pid/state" />
    <remap from="setpoint" to="/yaw_pid/setpoint" />
    <remap from="control_effort" to="/yaw_pid/control_effort" />
  </node>

  <!-- Launch the depth pid controller -->
  <node name="depth_pid" pkg="pid" type="controller" output="log">
    <param name="node_name" value="depth_pid_node"/>
    <param name="Kp" value="0.1" />
    <param name="Ki" value="0.0" />
    <param name="Kd" value="0.05" />
    <param name="upper_limit" value="0.1" />
    <param name="lower_limit" value="-0.1" />
    <param name="windup_limit" value="0.1" />
    <remap from="pid_enable" to="/depth_pid/pid_enable" />
    <remap from="state" to="/depth_pid/state" />
    <remap from="setpoint" to="/depth_pid/setpoint" />
    <remap from="control_effort" to="/depth_pid/control_effort" />
  </node>

</launch>
